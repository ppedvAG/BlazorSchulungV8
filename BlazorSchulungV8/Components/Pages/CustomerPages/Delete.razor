@page "/customers/delete"
@inject BlazorSchulungV8.Models.NorthwindContext DB
@using BlazorSchulungV8.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Customer</h4>
    <hr />
    @if (customer is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">CompanyName</dt>
            <dd class="col-sm-10">@customer.CompanyName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ContactName</dt>
            <dd class="col-sm-10">@customer.ContactName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ContactTitle</dt>
            <dd class="col-sm-10">@customer.ContactTitle</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Address</dt>
            <dd class="col-sm-10">@customer.Address</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">City</dt>
            <dd class="col-sm-10">@customer.City</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Region</dt>
            <dd class="col-sm-10">@customer.Region</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">PostalCode</dt>
            <dd class="col-sm-10">@customer.PostalCode</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Country</dt>
            <dd class="col-sm-10">@customer.Country</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Phone</dt>
            <dd class="col-sm-10">@customer.Phone</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Fax</dt>
            <dd class="col-sm-10">@customer.Fax</dd>
        </dl>
        <EditForm method="post" Model="customer" OnValidSubmit="DeleteCustomer" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(customer is null)">Delete</button> |
            <a href="/customers">Back to List</a>
        </EditForm>
    }
</div>

@code {
    Customer? customer;

    [SupplyParameterFromQuery]
    public string CustomerId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        customer = await DB.Customers.FirstOrDefaultAsync(m => m.CustomerId == CustomerId);

        if (customer is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteCustomer()
    {
        DB.Customers.Remove(customer!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/customers");
    }
}
